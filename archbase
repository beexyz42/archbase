#!/bin/bash
set -xeuo pipefail


! command -v pacman && exit 1
! ping -c 1 archlinux.org && exit 1
[[ ! -d "/sys/firmware/efi" ]] && exit 1
timedatectl set-ntp true
! command -v fzf && { sudo pacman -S --noconfirm fzf || exit 1; }


set +x


disk="$(lsblk -ndo name,size | fzf --reverse | awk '{print "/dev/" $1}')" && clear
[[ -z "${disk}" ]] && exit 1
[[ "${disk}" =~ "nvme" ]] && disk_suffix="p" || disk_suffix=""
while true; do
    read -p "IRREVERSIBLY wipe '${disk}'? (y/n) " yn
    case "${yn}" in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) # loop;;
    esac
done
clear


read -p "username: " username
while [[ "${username}" =~ [^a-zA-Z0-9] || -z "${username}" ]]
do
    read -p "(invalid chars) username: " username
done
clear


read -sep "password: " password
read -sep "confirm password: " password_confirm
while [[ "${password}" != "${password_confirm}" || -z "${password}" ]]
do
    read -sep "(retry) password: " password
    read -sep "confirm password: " password_confirm
done
clear


read -p "hostname: " hostname_
while [[ "${hostname_}" =~ [^a-zA-Z0-9-] || -z "${hostname_}" ]]
do
    read -p "(invalid chars) hostname: " hostname_
done
clear


timezone="$(timedatectl list-timezones | fzf --reverse --query="$(timedatectl show -p Timezone --value)")" && clear
[[ -z "${timezone}" ]] && exit 1
clear


vendor_id="$(grep -m1 'vendor_id' "/proc/cpuinfo")"
case "${vendor_id}" in
    *AuthenticAMD*) microcode="amd-ucode" ;;
    *GenuineIntel*) microcode="intel-ucode" ;;
    *) exit 1 ;;
esac


set -x


sgdisk -Z "${disk}"
sgdisk -a 2048 -o "${disk}"
sgdisk -n 1::+1GiB --typecode=1:ef00 --change-name=1:"boot" "${disk}"
sgdisk -n 2::-0 --typecode=2:8300 --change-name=2:"root" "${disk}"


mkfs.fat -F32 "${disk}${disk_suffix}1"
mkfs.ext4 "${disk}${disk_suffix}2"


mount "${disk}${disk_suffix}2" /mnt
mount -m "${disk}${disk_suffix}1" /mnt/boot


# sudo reflector --protocol https --age 12 --completion-percent 97 --latest 20 --score 7 --sort rate --verbose --save /etc/pacman.d/mirrorlist
pacstrap /mnt base base-devel linux-lts linux-firmware efibootmgr grub sudo networkmanager bash-completion nano "${microcode}"
genfstab -U /mnt >> /mnt/etc/fstab


arch-chroot /mnt /bin/bash << EOF
set -euo pipefail


ln -sf "/usr/share/zoneinfo/${timezone}" "/etc/localtime"
hwclock --systohc


sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
locale-gen
printf "LANG=en_US.UTF-8" > "/etc/locale.conf"


printf "${hostname_}" > "/etc/hostname"


sed -i "s/^#ParallelDownloads/ParallelDownloads/" "/etc/pacman.conf"
sed -i "s/^#Color/Color\nILoveCandy/" "/etc/pacman.conf"
sed -i "s/^# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/" "/etc/sudoers"
sed -i "s/^# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/" "/etc/sudoers"
sed -i "/\[multilib\]/,/Include/ s/^#//" "/etc/pacman.conf"


groupadd libvirt
useradd -m -G wheel,libvirt -s /bin/bash "${username}"
printf "${username}:${password}" | chpasswd


grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg


systemctl enable ntpd.service
systemctl enable NetworkManager.service
EOF


umount -R /mnt
reboot


####
